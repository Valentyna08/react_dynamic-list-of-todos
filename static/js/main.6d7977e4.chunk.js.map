{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","isActive","setIsActive","className","map","todo","classNames","id","completed","title","type","onClick","handleSelectedTodo","TodoFilter","query","setQuery","filteredBy","setFilteredBy","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","selectedUser","setSelectedUser","href","email","name","getData","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","loaded","setLoaded","visibleTodos","copyTodos","normalizeQuary","trim","toLowerCase","filter","includes","preparedTodos","useEffect","finally","userId","users","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d7977e4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n  isActive: boolean,\n  setIsActive: (value: boolean) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n  isActive,\n  setIsActive,\n}) => {\n  const handleSelectedTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setIsActive(true);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light':\n               selectedTodo?.id === todo.id && isActive,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\" />\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames({\n                      'far fa-eye': selectedTodo?.id !== todo.id,\n                      'far fa-eye-slash': selectedTodo?.id === todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  setQuery: (query: string) => void;\n  filteredBy: string;\n  setFilteredBy: (filteredBy: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  filteredBy,\n  setFilteredBy,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filteredBy}\n            onChange={event => setFilteredBy(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            </>\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n  isActive: boolean,\n  setIsActive: (value: boolean) => void,\n  selectedUser: User | null,\n  setSelectedUser: (user: User | null) => void,\n};\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n  isActive,\n  setIsActive,\n  selectedUser,\n  setSelectedUser,\n}) => {\n  function handleModalCloser() {\n    setIsActive(false);\n    setSelectedTodo(null);\n    setSelectedUser(null);\n  }\n\n  return (\n    <div\n      className={classNames('modal', {\n        'is-active': isActive,\n      })}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleModalCloser}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames(\n                { 'has-text-danger': !selectedTodo?.completed },\n                { 'has-text-success': selectedTodo?.completed },\n              )}\n              >\n                {selectedTodo?.completed ? (\n                  'Done'\n                ) : (\n                  'Planned'\n                )}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction getData<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => {\n  return getData<Todo[]>('/todos')\n    .then(todos => todos);\n};\n\nexport const getUser = (userId: number) => {\n  return getData<User>(`/users/${userId}`)\n    .then(users => users);\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { User } from './types/User';\n\nconst preparedTodos = (\n  todos: Todo[],\n  query: string,\n  filteredBy: string,\n) => {\n  let copyTodos = [...todos];\n  const normalizeQuary = query.trim().toLowerCase();\n\n  if (query) {\n    copyTodos = copyTodos.filter(todo => todo.title.toLowerCase().includes(normalizeQuary));\n  }\n\n  if (filteredBy) {\n    copyTodos = copyTodos.filter(todo => {\n      switch (filteredBy) {\n        case 'all':\n          return true;\n\n        case 'active':\n          return todo.completed === false;\n\n        case 'completed':\n          return todo.completed === true;\n\n        default:\n          return false;\n      }\n    });\n  }\n\n  return copyTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredBy, setFilteredBy] = useState('all');\n  const [isActive, setIsActive] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const visibleTodos = preparedTodos(todos, query, filteredBy);\n\n  useEffect(() => {\n    setLoaded(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoaded(false));\n  }, []);\n\n  useEffect(() => {\n    if (!selectedTodo) {\n      return;\n    }\n\n    getUser(selectedTodo?.userId).then(setSelectedUser);\n  }, [selectedTodo]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filteredBy={filteredBy}\n                setFilteredBy={setFilteredBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loaded ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                  isActive={isActive}\n                  setIsActive={setIsActive}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isActive && (\n        <TodoModal\n          isActive={isActive}\n          setIsActive={setIsActive}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n          selectedUser={selectedUser}\n          setSelectedUser={setSelectedUser}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}