{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","handleSelectedTodo","TodoFilter","query","setQuery","filteredBy","setFilteredBy","value","onChange","event","target","placeholder","style","pointerEvents","Loader","getData","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","users","href","email","name","App","setTodos","loaded","setLoaded","visibleTodos","useMemo","copyTodos","normalizeQuary","trim","toLowerCase","filter","includes","preparedTodos","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a310546.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const handleSelectedTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light':\n               selectedTodo?.id === todo.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames({\n                    'far fa-eye': selectedTodo?.id !== todo.id,\n                    'far fa-eye-slash': selectedTodo?.id === todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  setQuery: (query: string) => void;\n  filteredBy: string;\n  setFilteredBy: (filteredBy: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  filteredBy,\n  setFilteredBy,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filteredBy}\n            onChange={event => setFilteredBy(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            </>\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction getData<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => {\n  return getData<Todo[]>('/todos')\n    .then(todos => todos);\n};\n\nexport const getUser = (userId: number | undefined) => {\n  return getData<User>(`/users/${userId}`)\n    .then(users => users);\n};\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo?.userId).then(setUser);\n  }, [selectedTodo]);\n  function handleModalCloser() {\n    setSelectedTodo(null);\n  }\n\n  return (\n    <div\n      className={classNames('modal is-active', {\n      })}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleModalCloser}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames(\n                { 'has-text-danger': !selectedTodo?.completed },\n                { 'has-text-success': selectedTodo?.completed },\n              )}\n              >\n                {selectedTodo?.completed ? (\n                  'Done'\n                ) : (\n                  'Planned'\n                )}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nconst preparedTodos = (\n  todos: Todo[],\n  query: string,\n  filteredBy: string,\n) => {\n  let copyTodos = [...todos];\n  const normalizeQuary = query.trim().toLowerCase();\n\n  if (query) {\n    copyTodos = copyTodos.filter(todo => todo.title.toLowerCase().includes(normalizeQuary));\n  }\n\n  if (filteredBy) {\n    copyTodos = copyTodos.filter(todo => {\n      switch (filteredBy) {\n        case 'all':\n          return true;\n\n        case 'active':\n          return todo.completed === false;\n\n        case 'completed':\n          return todo.completed === true;\n\n        default:\n          return false;\n      }\n    });\n  }\n\n  return copyTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredBy, setFilteredBy] = useState('all');\n  const [loaded, setLoaded] = useState(false);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const visibleTodos = useMemo(() => {\n    return preparedTodos(todos, query, filteredBy);\n  }, [todos, query, filteredBy]);\n\n  useEffect(() => {\n    setLoaded(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoaded(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filteredBy={filteredBy}\n                setFilteredBy={setFilteredBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loaded ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}